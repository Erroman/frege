--- The type 'ConField' models a field in a data constructor.
module frege.compiler.types.ConstructorField where 
        -- generated by Splitter
import  frege.compiler.types.Positions
import  frege.compiler.enums.Visibility
import  frege.compiler.types.Types
import  frege.data.JSON (ToJSON, toJSON)

--- a constructor field
data ConField s = !Field { pos :: Position,   name, doc :: Maybe String, 
                           vis :: Visibility, strict :: Bool,   typ :: SigmaT s }

instance (ToJSON s) => ToJSON (ConField s) where
  toJSON cf = JSON.Value.Struct [ JSON.assoc "pos" cf.pos
                                , JSON.assoc "name" cf.name
                                , JSON.assoc "doc" cf.doc
                                , JSON.assoc "vis" cf.vis
                                , JSON.assoc "strict" cf.strict
                                , JSON.assoc "typ" cf.typ
                                ]
