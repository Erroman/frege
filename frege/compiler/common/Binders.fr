--- This is an undocumented module.
module frege.compiler.common.Binders where 
        -- generated by Splitter
import  frege.Prelude  hiding(error, print, println, break, <+>)
import  frege.compiler.enums.Flags
import  frege.compiler.types.Global  as  G

--- a, b, ..., z, aa, ab, ac, ...
private binders ∷ [String] → [String]
private binders alphabet = alphabet 
        ++ [ s1++s2 | s1 <- binders alphabet, s2 <- alphabet ]


--- used to create greek names
!allGreekBinders = binders [ctos c | c <- "αβγδεζηθιßκλμνξοπρςστυφχψω" ]


--- used to create fraktur names
!allFrakturBinders = binders ["𝖆", "𝖇", "𝖈", "𝖉", "𝖊", "𝖋", "𝖌", "𝖍", "𝖎",
                             "𝖏", "𝖐", "𝖑", "𝖒", "𝖓", "𝖔", "𝖕", "𝖖", 
                             "𝖗", "𝖘", "𝖙", "𝖚", "𝖛", "𝖜", "𝖝", "𝖞", "𝖟" ]


--- used to create ASCII names
!allAsciiBinders = binders [ctos c | c <- ['a' .. 'z'] ]

{-- 
    Used to create Java type variables

    This is so because we can't use the original ones as their names
    could conflict with function names.
    
    Conflict is still possible with a module name that is one of those.
-}
!allJtvBinders = binders jtvNames
!jtvNames =  ["𝓐", "𝓑", "𝓒", "𝓓", "𝓔", "𝓕", "𝓖", "𝓗", "𝓘", 
                         "𝓙", "𝓚", "𝓛", "𝓜", "𝓝", "𝓞", "𝓟", "𝓠", "𝓡", 
                         "𝓢", "𝓣", "𝓤", "𝓥", "𝓦", "𝓧", "𝓨", "𝓩", "Ω"]

!jtvArray = arrayFromList jtvNames

--- select alphabet for binders depending on current flags
allBinders g 
    | isOn flags USEFRAKTUR = allFrakturBinders 
    | isOn flags USEGREEK   = allGreekBinders
    | otherwise = allAsciiBinders
    where flags = (Global.options g).flags


